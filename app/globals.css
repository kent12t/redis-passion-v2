@import "tailwindcss";

@config "../tailwind.config.js";

:root {
  --background: #ffffff;
  --foreground: #171717;
  --grid-size: 60px;
  --font-circular-bold: var(--font-circular-bold);
  
  /* Page-specific colors */
  --start-result-bg: #facb16;
  --start-result-grid: #f6ae1e;
  --question-bg: #418ccb;
  --question-grid: #77aac6;
}

@media (prefers-color-scheme: dark) {
  :root {
    --background: #0a0a0a;
    --foreground: #ededed;
  }
}

body {
  color: var(--foreground);
  font-family: var(--font-circular-bold), system-ui, sans-serif;
  font-weight: 500;
  margin: 0;
  padding: 0;
  overflow: hidden;
}

/* Responsive 9:16 container system */
.app-container {
  width: 100vw;
  height: 100vh;
  display: flex;
  align-items: center;
  justify-content: center;
  /* Plain background color - no grid */
  background-color: var(--start-result-bg);
}

.app-container.question-page {
  background-color: var(--question-bg);
}

.app-content {
  position: relative;
  overflow: hidden;
  
  /* Grid background with thicker lines */
  background-image: linear-gradient(to right, var(--start-result-grid) 6px, transparent 6px),
    linear-gradient(to bottom, var(--start-result-grid) 6px, transparent 6px);
  background-size: var(--grid-size) var(--grid-size);
}

/* Default: Wider than 9:16 (landscape) - constrain by height */
.app-content {
  width: calc(100vh * 9 / 16);
  height: 100vh;
}

/* Narrower than 9:16 (very tall portrait) - constrain by width */
@media (max-aspect-ratio: 9/16) {
  .app-content {
    width: 100vw;
    height: calc(100vw * 16 / 9);
  }
}

/* Question page grid colors with thicker lines */
.question-page .app-content {
  background-image: linear-gradient(to right, var(--question-grid) 6px, transparent 6px),
    linear-gradient(to bottom, var(--question-grid) 6px, transparent 6px);
}

/* Marquee animation */
@keyframes marquee {
  0% {
    transform: translateX(0);
  }
  100% {
    transform: translateX(-33.333333%);
  }
}

@keyframes marquee-reverse {
  0% {
    transform: translateX(-66.666667%);
  }
  100% {
    transform: translateX(-33.333333%);
  }
}

.animate-marquee {
  animation: marquee 15s linear infinite;
}

.animate-marquee-reverse {
  animation: marquee-reverse 15s linear infinite;
}

h2,
h3,
h4,
h5,
h6,
.question {
  font-family: var(--font-circular-bold), system-ui, sans-serif;
  font-weight: 700;
  text-shadow: 2px 2px 0 rgba(255, 255, 255, 0.7), -2px -2px 0 rgba(255, 255, 255, 0.7),
    2px -2px 0 rgba(255, 255, 255, 0.7), -2px 2px 0 rgba(255, 255, 255, 0.7),
    0px 2px 0 rgba(255, 255, 255, 0.7), 0px -2px 0 rgba(255, 255, 255, 0.7),
    2px 0px 0 rgba(255, 255, 255, 0.7), -2px 0px 0 rgba(255, 255, 255, 0.7);
  filter: drop-shadow(-3px 3px 2px rgba(0, 0, 0, 0.15));
}

.title-shadow {
  text-shadow: 2px 2px 0 rgba(255, 255, 255, 0.7), -2px -2px 0 rgba(255, 255, 255, 0.7),
    2px -2px 0 rgba(255, 255, 255, 0.7), -2px 2px 0 rgba(255, 255, 255, 0.7),
    0px 2px 0 rgba(255, 255, 255, 0.7), 0px -2px 0 rgba(255, 255, 255, 0.7),
    2px 0px 0 rgba(255, 255, 255, 0.7), -2px 0px 0 rgba(255, 255, 255, 0.7);
  filter: drop-shadow(-3px 3px 2px rgba(0, 0, 0, 0.15));
}

button,
.motion-button {
  font-family: var(--font-circular-bold), system-ui, sans-serif;
  font-weight: 700;
}

.answer-button {
  font-family: var(--font-circular-bold), system-ui, sans-serif;
  font-weight: 600;
}

p {
  font-family: var(--font-circular-bold), system-ui, sans-serif;
  font-weight: 600;
}

/* Motion component styles */
.motion-card,
.motion-button {
  position: relative;
  box-shadow: -4px 4px 0px 0px rgba(0, 0, 0, 1);
  transform: translate(0, 0);
  transition: transform 0.01s ease-out, box-shadow 0.01s ease-out;
  will-change: transform, box-shadow;
  -webkit-tap-highlight-color: rgba(0,0,0,0);
}

.motion-card.selected,
.motion-button.selected {
  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 1) !important;
  transform: translate(-4px, 4px) !important;
}

.motion-card.interactive:hover:not(:active):not(.selected),
.motion-button.interactive:hover:not(:active):not(.selected) {
  box-shadow: -2px 2px 0px 0px rgba(0, 0, 0, 1);
  transform: translate(-2px, 2px);
  transition: transform 0.01s ease-out, box-shadow 0.01s ease-out;
}

.motion-card.interactive:active:not(.selected),
.motion-button.interactive:active:not(.selected) {
  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 1);
  transform: translate(-4px, 4px);
  transition: transform 0.01s ease-out, box-shadow 0.01s ease-out;
}

